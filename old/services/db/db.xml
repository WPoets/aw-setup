<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>WPoets</title>
	<link>https://wpoets.com</link>
	<description>Your Web Experts</description>
	<pubDate>Sun, 15 Dec 2019 14:09:10 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://wpoets.com</wp:base_site_url>
	<wp:base_blog_url>https://wpoets.com</wp:base_blog_url>

	
				
	

		<item>
		<title>meta</title>
		<link>https://wpoets.com/?post_type=db_service&#038;p=265</link>
		<pubDate>Tue, 13 Feb 2018 09:52:16 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://dev6.loantap.in/db_service/meta/</guid>
		<description></description>
		<content:encoded><![CDATA[				
				  //**
Update Meta data for one object_id
  **// 
[templates.add update_object_meta]
 [aw2.get current_user.user_email set=template.email/]
  [multi.update]
    start transaction;
      select @object_id:="[template.get object_id /]" from dual;
			select @coll_id:="[template.get coll_id /]" from dual;
      [loop.@meta template.meta]
        select @cnt:=count(1) from [template.get meta_table /] where object_id=@object_id and coll_id=@coll_id and meta_key="[aw2.get @meta.item.meta_key/]";
        insert into [template.get meta_table /](object_id,coll_id,coll_type,meta_key,meta_value,updated_by)
        select @object_id,@coll_id,"[aw2.get @meta.item.coll_type/]","[aw2.get @meta.item.meta_key/]","[aw2.get @meta.item.meta_value m.esc_sql=yes /]","[template.email /]" from dual where @cnt=0;
        update [template.get meta_table /] 
        set coll_type="[aw2.get @meta.item.coll_type/]",meta_value="[aw2.get @meta.item.meta_value m.esc_sql=yes /]",updated_by="[template.email /]",stamp=current_timestamp 
        where object_id=@object_id and coll_id=@coll_id and meta_key="[aw2.get @meta.item.meta_key/]" and @cnt=1;  
      [/loop.@meta]      
    commit;
  [/multi.update]
[/templates.add]  




  //**
select object meta for one object_id
  **// 
[templates.add select_object_meta]

  [template.set query empty="{template.meta_keys}"]
	  select * from [template.get meta_table /] where coll_id="[template.get coll_id /]" and object_id="[template.get object_id /]";
  [/template.set]
  
  [template.get meta_keys.comma set=template.meta_keys not_empty="{template.meta_keys}"/]
  
  [template.set query not_empty="{template.meta_keys}"]	
	    select * from [template.get meta_table /] where coll_id="[template.get coll_id /]" and object_id="[template.get object_id /]" and meta_key in ([template.get meta_keys.quote_comma/]);
	[/template.set]

   
[query.get_results set=template.rs] [template.get query/]	[/query.get_results]

[template.set rs_arr/]
  [loop.@rs template.rs]
    [aw2.get @rs.item.meta_value set=template.rs_arr.{@rs.item.meta_key} /]
  [/loop.@rs]  

[template.return template.rs_arr/]
[/templates.add]





  //**
Insert One collection for One Object
  **//  
[templates.add insert_coll_meta]
	[aw2.get current_user.user_email set=template.email/]
  [multi.update]
    start transaction;
      [loop.@meta template.meta]
            insert into [template.get meta_table /](object_id,coll_id,coll_type,meta_key,meta_value,updated_by)
        		VALUES ("[template.get object_id /]","[template.get coll_id/]","[template.get coll_type/]","[aw2.get @meta.item.meta_key/]","[aw2.get @meta.item.meta_value m.esc_sql=yes /]","[template.email/]");
      [/loop.@meta]
    commit;
  [/multi.update]
  
[/templates.add]  





  //**
Update One collection for One Object
  **// 
[templates.add update_coll_meta]
[aw2.get current_user.user_email set=template.email/]
[multi.update]
  start transaction;
  select @object_id:='[template.get object_id /]' from dual;
  
    [loop.@meta template.meta]
      select @cnt:=count(1) from [template.get meta_table /] where object_id=@object_id and coll_id="[template.get coll_id /]" and coll_type="[template.get coll_type/]" and meta_key="[aw2.get @meta.item.meta_key/]";
      
      insert into [template.get meta_table /]
        (object_id,coll_id,coll_type,meta_key,meta_value,updated_by)
        
      select @object_id,"[template.get coll_id /]","[template.get coll_type/]","[aw2.get @meta.item.meta_key/]","[aw2.get @meta.item.meta_value m.esc_sql=yes /]","[template.email/]" from dual where @cnt=0;
      
      update [template.get meta_table /] 
      set meta_value="[aw2.get @meta.item.meta_value m.esc_sql=yes /]",updated_by="[template.email/]",stamp=current_timestamp 
      where object_id=@object_id and coll_id="[template.get coll_id /]" and coll_type="[template.get coll_type/]" and meta_key="[aw2.get @meta.item.meta_key/]" and @cnt=1;  
    [/loop.@meta]
    
    commit;
  [/multi.update]  
  
[/templates.add]  





  //**
select collection meta for one collection
  **// 
[templates.add select_collection_meta]
  [template.set query empty="{template.meta_keys}"]
	  select * from [template.meta_table/] where coll_id="[template.coll_id/]" and coll_type="[template.coll_type/]" and object_id='[template.object_id /]';
  [/template.set]
  
  [template.get meta_keys.comma set=template.meta_keys not_empty="{template.meta_keys}"/]
  
  [template.set query not_empty="{template.meta_keys}"]	
	    select * from [template.meta_table/] where coll_id="[template.coll_id/]" and coll_type="[template.coll_type/]" and object_id="[template.object_id /]" and meta_key in ([template.meta_keys.quote_comma/]);
	[/template.set]
   
[query.get_results set=template.rs] [template.query/]	[/query.get_results]
[template.return template.rs/]
[/templates.add]



  //**
select meta for one object_id
  **// 
[templates.add select_meta]
  [template.set query empty="{template.meta_keys}"]
	  select * from [template.meta_table /] where object_id="[template.object_id /]";
  [/template.set]
  
  [template.get meta_keys.comma set=template.meta_keys not_empty="{template.meta_keys}"/]
  
  [template.set query not_empty="{template.meta_keys}"]	
	    select * from [template.meta_table /] where  object_id='[template.object_id /]' and meta_key in ([template.meta_keys.quote_comma/]);
	[/template.set]

   
[query.get_results set=template.rs][template.query/][/query.get_results]

[template.return template.rs/]
[/templates.add]

[templates.add select_meta_key_value_pair]
	
	[query.get_results set=template.rs]  
  	select meta_key,meta_value from [template.get meta_table /] where 1=1
      [if.not_empty template.coll_id]
        and coll_id="[template.get coll_id /]" 
      [/if.not_empty]
      [if.not_empty template.object_id]
        and object_id="[template.get object_id /]"	
      [/if.not_empty]
      ;
  [/query.get_results]
  
  
  [template.set response="" /]
  [loop.@key_value_item template.rs]
  	[template.set response.{@key_value_item.item.meta_key}][aw2.get @key_value_item.item.meta_value /][/template.set]
  [/loop.@key_value_item]
  [template.return template.response /]

[/templates.add]				]]></content:encoded>
		<excerpt:encoded><![CDATA[
				
								]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date><![CDATA[2018-02-13 09:52:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-02-13 09:52:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[meta]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[db_service]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>meta_query</title>
		<link>https://wpoets.com/?post_type=db_service&#038;p=266</link>
		<pubDate>Tue, 13 Feb 2018 09:52:16 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://dev6.loantap.in/db_service/meta_query/</guid>
		<description></description>
		<content:encoded><![CDATA[
				
				//** Vikas Build support for seek to make queries even faster **//

//** input module.query
output module.dataset
**//
[templates.add main]
    [aw2.get dataset_values pageno="{module.query.pageno}" pagesize="{module.query.pagesize}" offset="{module.query.offset}" set="module.dataset" /]

//** set Limit **//
    [module.set dataset.limit_string]
        LIMIT [module.dataset.pagesize /]
    [/module.set] 


//** set Offset **//

  [module.set dataset.offset_string]
        OFFSET [module.dataset.offset /]
  [/module.set] 

  [if.equal lhs='{module.dataset.pagesize}' rhs='-1']
    [module.set dataset.limit_string='' /]
    [module.set dataset.offset_string='' /]
  [/if.equal]


  //** If With exists in the query, Create With **//
	[module.set with={module.query.with} /]		
	[templates.q0 set=module.dataset.q0 /]

//** additional Fields **//

	[module.set query_counter=0 /]
	[module.set query_no='q{module.query_counter}' /]

	[module.set add_field={module.query.with.add_field} /]		
	[templates.add_field /]

//** Create Filters **//

	[module.set filter={module.query.with.filter} /]		
		[templates.filter /]


	[do.@junk set=module.dataset.with_query]
		[module.dataset.q0 /]
		[if.not_empty module.dataset.field_query]
			,[module.get dataset.field_query.comma /]
		[/if.not_empty]
		[if.not_empty module.dataset.filter_query]
			,[module.get dataset.filter_query.comma /]
		[/if.not_empty]
	 [/do.@junk]


//** Generate the count if required **//
	[if.equal lhs='{module.query.query_count}' rhs='yes']
		[do.@junk set=module.dataset.count_query]
						[module.set current_query_no='{module.query_no}' /]
						[module.set current_query_no={module.query.with.bounded_data.query_no} not_empty='{module.query.with.bounded_data.query_no}'/]

			[module.dataset.with_query /],
			bounded_data as 
			(
				SELECT * FROM [module.current_query_no /] 
				[if.not_empty module.query.max_count]
				LIMIT [module.query.max_count/]
				[/if.not_empty]
			),
			junk AS (SELECT * FROM bounded_data)
			select count(1) from bounded_data
		[/do.@junk]
		[query.get_var set=module.dataset.found_rows]
			[module.get dataset.count_query /]
		[/query.get_var]
		[aw2.get dataset_values pagesize="{module.dataset.pagesize}" found_rows="{module.dataset.found_rows}" set="module.temp_dataset" /]
		[module.set dataset.found_pages="{module.temp_dataset.found_pages}" /]
	[/if.equal]

//** Create Bounded Data **//

	[templates.bounded_data set=module.dataset.bounded_query /]

	[module.set dataset.junk_query]
	junk AS (SELECT * FROM bounded_data)
	[/module.set]

//** Set up transform **//		

[do.@junk set=module.dataset.meta_query.new not_empty='{module.query.transform.ref_id}']
		[module.set dataset.transform=yes /]
		select 'data_id' AS type,[module.query.transform.ref_id] AS data_id,'' AS meta_key,'' AS meta_value from bounded_data
[/do.@junk]

[do.@junk set=module.dataset.meta_query.new not_empty='{module.query.transpose.ref_id}']
		[module.set dataset.transpose=yes /]
		select 'data_id' AS type,[module.query.transpose.ref_id] AS data_id,'' AS meta_key,'' AS meta_value from bounded_data
[/do.@junk]


//** Create the meta query **//

	[module.set meta_query={module.query.meta} /]		
	[templates.meta_query /]

		[module.set dataset.meta_query.new  empty='{module.dataset.meta_query}']
				SELECT * FROM bounded_data
		[/module.set]  

//** join the query **//

	[do.@junk set=module.dataset.with_query]
			 [module.dataset.with_query /]
			,[module.get dataset.bounded_query /]
			,[module.get dataset.junk_query /]
	 [/do.@junk]
	[do.@junk set=module.dataset.query]
	  [module.get dataset.with_query /]			    	
	  [aw2.get module.dataset.meta_query separator=' UNION ' /]
	[/do.@junk]
	[module.return module.dataset cond='{module.query.only_query}' equal='yes'/]
	[query.meta_query dataset='{module.dataset}' set=module.dataset /]
	[module.return module.dataset /]
[/templates.add]


[templates.add set_query_no]
	[module.set previous_query_no='q{module.query_counter}'  /]
	[math.solve main='{module.query_counter}+1' set=module.query_counter /]
	[module.set query_no='q{module.query_counter}' /]
[/templates.add]



//** templates to add meta query **//

[templates.add meta_query]
  [loop.@meta_query module.query.meta]
	[module.set current_meta={@meta_query.item} /]	  
	[templates.meta_bounded_field true='{module.current_meta.bounded_field.exists}'/]	
	[templates.meta_series true='{module.current_meta.x.exists}'/]
	[templates.meta_field true='{module.current_meta.field.exists}'/]	
	[templates.meta_meta_keys true='{module.current_meta.meta_keys.exists}' /]	
	[templates.meta_taxonomy true='{module.current_meta.taxonomy.exists}' /]	
	[templates.meta_sql true='{module.current_meta.sql.exists}' /]	
	[templates.meta_aw2_collection_keys true='{module.current_meta.aw2_collection_keys.exists}' /]	
  [/loop.@meta_query]
[/templates.add]

[templates.add meta_series]
  [do.@junk set=module.dataset.meta_query.new]
		select 
		[templates.meta_x_format /] as x
		[if.not_empty module.current_meta.series.field]
		,[module.current_meta.series.field /] as series
		[/if.not_empty]
        , [module.current_meta.series_data.agg default="count"/]([module.current_meta.series_data.field/]) as series_data
         from bounded_data
		group by  
		[templates.meta_x_format /]
		[if.not_empty module.current_meta.series.field]
		,[module.current_meta.series.field /]
		[/if.not_empty]
  [/do.@junk]
  [module.set current_meta='' /]	
[/templates.add]

[templates.add meta_x_format]
	[template.return module.current_meta.x.field empty='{module.current_meta.x.field_format}'/]

	[template.set x='{module.current_meta.x.field}' /]  
	[template.set x='DATE({template.x})' cond='{module.current_meta.x.field_format}' equal='day' /]
	[template.set x='DATE({template.x})' cond='{module.current_meta.x.field_format}' equal='days' /]
	[template.set x='DATE({template.x})' cond='{module.current_meta.x.field_format}' equal='week' /]
	[template.set x='DATE({template.x})' cond='{module.current_meta.x.field_format}' equal='month' /]
	
	[template.set x="DATE_FORMAT({template.x},'%Y-%u')" cond='{module.current_meta.x.field_format}' equal='weeks' /]

	[template.set x="DATE_FORMAT({template.x},'%Y-%m')" cond='{module.current_meta.x.field_format}' equal='months' /]
	[template.set x="DATE_FORMAT({template.x},'%Y-%m')" cond='{module.current_meta.x.field_format}' equal='quarter' /]
	[template.set x="DATE_FORMAT({template.x},'%Y-%m')" cond='{module.current_meta.x.field_format}' equal='year' /]

	
	[template.set x="CONCAT(YEAR({template.x}),'-',Quarter({template.x_column}))" cond='{module.current_meta.x.field_format}' equal='quarters' /]

	
	[template.set x='YEAR({template.x})' cond='{module.current_meta.x.field_format}' equal='years' /]
	
	[template.return template.x /]
[/templates.add]

[templates.add meta_x_format_backup]
	[template.return module.current_meta.x.field empty='{module.current_meta.x.field_format}'/]

	[template.set x='{module.current_meta.x.field}' /]  
	[template.set x='DATE({template.x})' cond='{module.current_meta.x.field_format}' equal='day' /]
	[template.set x="DATE_FORMAT({template.x},'%Y-%u')" cond='{module.current_meta.x.field_format}' equal='week' /]
	[template.set x="DATE_FORMAT({template.x},'%Y-%m')" cond='{module.current_meta.x.field_format}' equal='month' /]
	[template.set x="CONCAT(YEAR({template.x}),'-',Quarter({template.x_column}))" cond='{module.current_meta.x.field_format}' equal='quarter' /]
	[template.set x='YEAR({template.x})' cond='{module.current_meta.x.field_format}' equal='year' /]
	[template.return template.x /]
[/templates.add]

[templates.add meta_bounded_field]
  [module.set current_meta.data_id_field='data_id' empty='{module.current_meta.data_id_field}'/]  [do.@junk set=module.dataset.meta_query.new]
	  SELECT 'meta' AS type,bounded_data.[module.current_meta.data_id_field /] ,'[module.current_meta.bounded_field]' as meta_key,[module.current_meta.bounded_field] as meta_value 
	  FROM bounded_data
  [/do.@junk]
  [module.set current_meta='' /]	
[/templates.add]


[templates.add meta_field]
  [module.set current_meta.data_id_field='data_id' empty='{module.current_meta.data_id_field}'/]
  [module.set current_meta.as_field='{module.current_meta.field}' empty='{module.current_meta.as_field}'/]
  [module.set current_meta.table='wp_posts' empty='{module.current_meta.table}'/]
  [module.set current_meta.id_field='ID' empty='{module.current_meta.id_field}'/]
  [module.set current_meta.ref_id='data_id' empty='{module.current_meta.ref_id}'/]

  [do.@junk set=module.dataset.meta_query.new]
	  SELECT 'meta' AS type,bounded_data.[module.current_meta.data_id_field /] ,'[module.current_meta.as_field]' as meta_key,[module.current_meta.field] as meta_value 
	  FROM [module.current_meta.table] AS meta JOIN bounded_data ON meta.[module.current_meta.id_field /]=bounded_data.[module.current_meta.ref_id /] 
  [/do.@junk]
  [module.set current_meta='' /]	

[/templates.add]

[templates.add meta_meta_keys]
[module.set current_meta.data_id_field='data_id' empty='{module.current_meta.data_id_field}'/]
[module.set current_meta.meta_key_field='meta_key' empty='{module.current_meta.meta_key_field}'/]
[module.set current_meta.meta_value_field='meta_value' empty='{module.current_meta.meta_value_field}'/]
[module.set current_meta.table='wp_postmeta' empty='{module.current_meta.table}'/]
[module.set current_meta.id_field='post_id' empty='{module.current_meta.id_field}'/]
[module.set current_meta.ref_id='data_id' empty='{module.current_meta.ref_id}'/]


  [do.@junk set=module.dataset.meta_query.new]
	SELECT 'meta' AS type,bounded_data.[module.current_meta.data_id_field /] ,[module.current_meta.meta_key_field] as meta_key,[module.current_meta.meta_value_field] as meta_value 
	FROM [module.current_meta.table] AS meta JOIN bounded_data ON meta.[module.current_meta.id_field /]=bounded_data.[module.current_meta.ref_id /] where [module.current_meta.meta_key_field] in 
	([module.current_meta.meta_keys.comma.quote_comma /])	
  [/do.@junk]
  [module.set current_meta='' /]	

[/templates.add]

[templates.add meta_taxonomy]
	[module.set current_meta.data_id_field='data_id' empty='{module.current_meta.data_id_field}'/]
	[module.set current_meta.taxonomy_value_field='name' empty='{module.current_meta.taxonomy_value_field}'/]
	[module.set current_meta.ref_id='data_id' empty='{module.current_meta.ref_id}'/]


  [do.@junk set=module.dataset.meta_query.new]
	SELECT 'meta' AS type,bounded_data.[module.current_meta.data_id_field /] ,taxonomy as meta_key,[module.current_meta.taxonomy_value_field] as meta_value 
	FROM all_terms AS meta JOIN bounded_data ON meta.object_id=bounded_data.[module.current_meta.ref_id /] where taxonomy in 
	([module.current_meta.taxonomy.comma.quote_comma /])	
  [/do.@junk]
  [module.set current_meta='' /]	
[/templates.add]

[templates.add meta_sql]
  [do.@junk set=module.dataset.meta_query.new]
	  [code.run module.current_meta.sql /]
  [/do.@junk]
  [module.set current_meta='' /]	  
[/templates.add]


[templates.add meta_aw2_collection_keys]
	[module.set current_meta.data_id_field='data_id' empty='{module.current_meta.data_id_field}'/]
	[module.set current_meta.ref_id='data_id' empty='{module.current_meta.ref_id}'/]

	[do.@junk set=module.dataset.meta_query.new]
	 SELECT 'meta' AS type,bounded_data.[module.current_meta.data_id_field /],meta_key,meta_value FROM [module.current_meta.table /] AS meta JOIN bounded_data ON meta.object_id=bounded_data.[module.current_meta.ref_id /] 
	  where meta.meta_key in (
		  [module.current_meta.aw2_collection_keys.comma.quote_comma /]
	  )
	  [if.not_empty module.current_meta.coll_id]
		  AND meta.coll_id='[module.current_meta.coll_id /]'
	  [/if.not_empty]
      [if.not_empty module.current_meta.coll_type]
		  AND meta.coll_type='[module.current_meta.coll_type /]'
	  [/if.not_empty]
	[/do.@junk]
  [module.set current_meta='' /]		
[/templates.add]




//** templates to add bounded data **//

[templates.add bounded_data]
		[module.set current_query_no='{module.query_no}' /]
		[module.set current_query_no={module.query.with.bounded_data.query_no} not_empty='{module.query.with.bounded_data.query_no}'/]

	bounded_data as 
	(
	  SELECT * FROM [module.current_query_no /] 
			[if.not_empty module.query.order]
				ORDER BY [module.get query.order /]
			[/if.not_empty]

	  [module.dataset.limit_string /] 
	  [module.dataset.offset_string /]
	)
[/templates.add]




//** templates to build filter **//
[templates.add filter]
	[loop.@filter module.filter]
	  [module.set current_filter={@filter.item} /]	

	  [templates.filter_sql true='{module.current_filter.sql.exists}' /]	
	  [templates.filter_meta_table true='{module.current_filter.meta_table.exists}' /]	
	  [templates.filter_meta_key true='{module.current_filter.meta_key.exists}' /]	
	  [templates.filter_taxonomy true='{module.current_filter.taxonomy.exists}' /]	
	  [templates.filter_period true='{module.current_filter.period.exists}' /]	
	  [templates.filter_between true='{module.current_filter.after_date.exists}' /]
	  [templates.filter_between true='{module.current_filter.before_date.exists}' /]
	  [templates.filter_between true='{module.current_filter.from_date.exists}' /]
	  [templates.filter_between true='{module.current_filter.to_date.exists}' /]
	  [templates.filter_field true='{module.current_filter.field.exists}' /]			
	  [templates.filter_id_field true='{module.current_filter.id_field.exists}' /]

	[/loop.@filter]
[/templates.add]


[templates.add after_filter_query]

  [templates.set_query_no /]

  [do.@junk set=module.dataset.filter_query.new]

	[module.query_no /] as 
	(
	  select [module.previous_query_no /].* from [module.current_filter.table /] join [module.previous_query_no /] on 
	  [module.previous_query_no /].[module.current_filter.ref_id]=[module.current_filter.table /].[module.current_filter.id_field /] 
				  where 
		  1=1
		  and
	  [module.current_filter.sql_where /]
	)  
  [/do.@junk]


[/templates.add] 



[templates.add filter_meta_key]
	[module.set current_filter.meta_value='junk' cond='{module.current_filter.operator}' equal='exists' /]
	[if.not_whitespace module.current_filter.meta_value]
		[module.current_filter.table set=module.current_filter.table default=wp_postmeta /]
		[module.current_filter.id_field set=module.current_filter.id_field default=post_id /]
		[module.current_filter.ref_id set=module.current_filter.ref_id default=data_id /]
		[module.current_filter.meta_key_field set=module.current_filter.meta_key_field default='meta_key' /]
		[module.current_filter.meta_key.comma.quote_comma set=module.current_filter.meta_key/]		
		[module.current_filter.meta_value_field set=module.current_filter.column default='meta_value'/]	
		[module.current_filter.meta_value set=module.current_filter.value /]	


		[do.@junk set='module.current_filter.sql_where']	
			[module.current_filter.table].[module.current_filter.meta_key_field /] in ([module.current_filter.meta_key/]) and 
			[templates.apply_operator where='{module.current_filter}']
		[/do.@junk]
		[templates.after_filter_query /]	
	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]

[templates.add filter_meta_table]
	[module.set current_filter.meta_value='junk' cond='{module.current_filter.operator}' equal='exists' /]
	[if.not_whitespace module.current_filter.meta_value]
		[module.current_filter.meta_table set=module.current_filter.table /]
		[module.current_filter.id_field set=module.current_filter.id_field default=object_id /]
		[module.current_filter.ref_id set=module.current_filter.ref_id default=data_id /]
		[module.current_filter.meta_key_field set=module.current_filter.meta_key_field default='meta_key' /]
		[module.current_filter.meta_key.comma.quote_comma set=module.current_filter.meta_key/]		
		[module.current_filter.meta_value_field set=module.current_filter.column default='meta_value'/]	
		[module.current_filter.meta_value set=module.current_filter.value /]	
		[do.@junk set='module.current_filter.sql_where']
			[module.current_filter.table].coll_id='[module.current_filter.coll_id /]'	
			and 			
			[module.current_filter.table].[module.current_filter.meta_key_field /] in ([module.current_filter.meta_key/]) and 
			[templates.apply_operator where='{module.current_filter}']
		[/do.@junk]
		[templates.after_filter_query /]	
	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]


[templates.add filter_field]
	[if.not_whitespace module.current_filter.field]
		[module.current_filter.table set=module.current_filter.table default=wp_posts /]
		[module.current_filter.id_field set=module.current_filter.id_field default='ID' /]
		[module.current_filter.ref_id set=module.current_filter.ref_id default=data_id /]
		[module.current_filter.field set=module.current_filter.column/]
		[module.current_filter.field_value set=module.current_filter.value/]

		[do.@junk set='module.current_filter.sql_where']	
			[templates.apply_operator where='{module.current_filter}']
		[/do.@junk]

		[templates.after_filter_query /]	
	[/if.not_whitespace] 

	[module.set current_filter='' /]	
[/templates.add]


[templates.add filter_id_field]
	[if.not_whitespace module.current_filter.id_field]
		[module.current_filter.table set=module.current_filter.table default=wp_posts /]
		[module.current_filter.id_field set=module.current_filter.id_field /]
		[module.current_filter.ref_id set=module.current_filter.ref_id default=data_id /]

		[do.@junk set='module.current_filter.sql_where']	
		1=1
		[/do.@junk]
		[templates.after_filter_query /]	
	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]

[templates.add filter_sql]
	[if.not_whitespace module.current_filter.sql]
		[module.current_filter.ref_id set=module.current_filter.ref_id default=data_id /]


		[templates.set_query_no /]
		[do.@junk set=module.dataset.filter_query.new]
			[module.query_no /] as 
				(
				[code.run module.current_filter.sql /]
				)
		[/do.@junk]
	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]



[templates.add filter_taxonomy]
	[if.not_whitespace module.current_filter.term]
		[module.current_filter.table set=module.current_filter.table default=all_terms /]
		[module.current_filter.id_field set=module.current_filter.id_field default=object_id /]
		[module.current_filter.ref_id set=module.current_filter.ref_id default=data_id /]

		[module.current_filter.taxonomy_field set=module.current_filter.taxonomy_field default='taxonomy' /]
		[module.current_filter.taxonomy.comma.quote_comma set=module.current_filter.taxonomy/]

		[module.current_filter.meta_value_field set=module.current_filter.column default='slug'/]		
		[module.current_filter.term set=module.current_filter.value/]

		[do.@junk set='module.current_filter.sql_where']	
			[module.current_filter.table].[module.current_filter.taxonomy_field /] in ([module.current_filter.taxonomy/]) and 
			[templates.apply_operator where='{module.current_filter}' /]
		[/do.@junk]
		[templates.after_filter_query /]	
	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]

[templates.add filter_period]
	[if.not_whitespace module.current_filter.period]
		[module.current_filter.field set=module.current_filter.field /]
		[module.current_filter.period set=module.current_filter.period default='day:today'/]
		[module.current_filter.which set=module.current_filter.which default=0 /]
		
        [date.aw2_period period="{module.current_filter.period}" set=template.select_period_arr/]

		[do.@junk set='module.current_filter.sql_where']	
			date([module.current_filter.field]) <= DATE([template.get select_period_arr.end_date /])
			AND date([module.current_filter.field]) >= DATE([template.get select_period_arr.start_date /])
		[/do.@junk]

	[templates.set_query_no /]
		[do.@junk set=module.dataset.filter_query.new]
	[module.query_no /] as 
		(
		select [module.previous_query_no /].* from [module.previous_query_no /] 
					where 
			[module.current_filter.sql_where]
		)
  [/do.@junk]

	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]

[templates.add filter_between]
	[module.current_filter.field set=module.current_filter.field /]

	[do.@junk set='module.current_filter.sql_where']	
		1=1 
		[if.not_whitespace module.current_filter.before_date]
			 and date([module.current_filter.field /]) < date('[module.current_filter.before_date /]')	
		[/if.not_whitespace] 
		[if.not_whitespace module.current_filter.to_date]
			 and date([module.current_filter.field /]) <= date('[module.current_filter.to_date /]')	
		[/if.not_whitespace] 

		[if.not_whitespace module.current_filter.after_date]
			 and date([module.current_filter.field /]) > date('[module.current_filter.after_date /]')	
		[/if.not_whitespace] 
		[if.not_whitespace module.current_filter.from_date]
			 and date([module.current_filter.field /]) >= date('[module.current_filter.from_date /]')	
		[/if.not_whitespace]
	[/do.@junk]

	[templates.set_query_no /]
		[do.@junk set=module.dataset.filter_query.new]
	[module.query_no /] as 
		(
		select [module.previous_query_no /].* from [module.previous_query_no /] 
					where 
			[module.current_filter.sql_where]
		)
  [/do.@junk]

	[module.set current_filter='' /]	
[/templates.add]




//** templates to build add_field **//
[templates.add add_field]
	[loop.@add_field module.add_field]
		[module.set current_field={@add_field.item} /]	
					
		[templates.add_field_meta_key true='{module.current_field.meta_key.exists}' /]	
		[templates.add_field_aw2_meta_key true='{module.current_field.aw2_meta_key.exists}' /]	

		[templates.add_field_taxonomy true='{module.current_field.taxonomy.exists}' /]
		[templates.add_field_sql true='{module.current_field.sql.exists}' /]
		[templates.add_field_field true='{module.current_field.field.exists}' /]    
					[module.set current_query_no='' /]		
	[/loop.@add_field]
[/templates.add]


[templates.add add_field_meta_key]
	[aw2.get module.current_field.meta_key set=template.meta_key /]

	[aw2.get module.current_field.id_field set=template.id_field default='post_id'/]
	[aw2.get module.current_field.ref_id set=template.ref_id default='data_id'/]

	[aw2.get module.current_field.meta_value_field set=template.meta_value_field default='meta_value'/]

	[aw2.get module.current_field.field set=template.field default='{template.meta_key}' /]
	[aw2.get module.current_field.table set=template.table default=wp_postmeta /]

	[aw2.get module.current_field.meta_key_field set=template.meta_key_field default='meta_key' /]
    
	[aw2.get module.current_field.ifnull set=template.ifnull/]


	[templates.set_query_no /]
			[module.set current_query_no={module.query_no} /]
			[module.set current_query_no={@add_field.item.query_no} not_empty='{@add_field.item.query_no}'/]

	[do.@junk set=module.dataset.field_query.new]

	  [module.current_query_no /] as 
	  (
	  select [module.previous_query_no /].*, 
	  
      [if.not_empty template.ifnull]
      	ifnull([template.meta_value_field /],'[template.ifnull /]') as [template.field /]  
      [/if.not_empty]
      [if.else]
      	[template.meta_value_field /] as [template.field /]  
      [/if.else]
      
      from
      [module.previous_query_no /] left join [template.table /]   on 
	  [module.previous_query_no /].[template.ref_id]=[template.table /].[template.id_field /] and [template.meta_key_field /]='[template.meta_key/]' )
	[/do.@junk]
		[module.set current_field='' /]	

[/templates.add]


[templates.add add_field_aw2_meta_key]
	[aw2.get module.current_field.aw2_meta_key set=template.meta_key /]
	[aw2.get module.current_field.coll_id set=template.coll_id /]

	[aw2.get module.current_field.id_field set=template.id_field default='object_id'/]
	[aw2.get module.current_field.ref_id set=template.ref_id default='data_id'/]

	[aw2.get module.current_field.meta_value_field set=template.meta_value_field default='meta_value'/]

	[aw2.get module.current_field.field set=template.field default='{template.meta_key}' /]
	[aw2.get module.current_field.table set=template.table /]

	[aw2.get module.current_field.meta_key_field set=template.meta_key_field default='meta_key' /]
	[aw2.get module.current_field.ifnull set=template.ifnull/]
    
	[templates.set_query_no /]
			[module.set current_query_no={module.query_no} /]
			[module.set current_query_no={@add_field.item.query_no} not_empty='{@add_field.item.query_no}'/]

	[do.@junk set=module.dataset.field_query.new]

	  [module.current_query_no /] as 
	  (
	  select [module.previous_query_no /].*,
      
      [if.not_empty template.ifnull]
      	ifnull([template.meta_value_field /],'[template.ifnull /]') as [template.field /]  
      [/if.not_empty]
      [if.else]
      	[template.meta_value_field /] as [template.field /]  
      [/if.else]
      
	  from [module.previous_query_no /] left join [template.table /]   on 
	  [module.previous_query_no /].[template.ref_id]=[template.table /].[template.id_field /] 
      			[if.not_empty template.coll_id]
			and coll_id='[template.coll_id]'
			[/if.not_empty]

      and [template.meta_key_field /]='[template.meta_key/]' 
	)		
	[/do.@junk]
		[module.set current_field='' /]	

[/templates.add]


[templates.add add_field_field]
	[aw2.get module.current_field.field set=template.field /]
	[aw2.get module.current_field.as_field set=template.as_field default='{template.field}' /]

	[aw2.get module.current_field.id_field set=template.id_field default='ID'/]
	[aw2.get module.current_field.ref_id set=template.ref_id default='data_id'/]

	[aw2.get module.current_field.table set=template.table default=wp_posts /]
	[aw2.get module.current_field.ifnull set=template.ifnull/]

	[templates.set_query_no /]
			[module.set current_query_no={module.query_no} /]
			[module.set current_query_no={@add_field.item.query_no} not_empty='{@add_field.item.query_no}'/]

	[do.@junk set=module.dataset.field_query.new]

	  [module.current_query_no /] as 
	  (
	  select [module.previous_query_no /].*, 
      
      [if.not_empty template.ifnull]
      	ifnull([template.field /],'[template.ifnull /]') as [aw2.get template.as_field /]   
      [/if.not_empty]
      [if.else]
		  [template.field /] as [aw2.get template.as_field /] 
      [/if.else]


      from 
	  [module.previous_query_no /] left join [template.table /]
	  on 
	  [module.previous_query_no /].[template.ref_id]=[template.table /].[template.id_field /] )
	[/do.@junk]
		[module.set current_field='' /]	
[/templates.add]

[templates.add add_field_taxonomy]
	[aw2.get module.current_field.taxonomy set=template.taxonomy /]

	[aw2.get module.current_field.id_field set=template.id_field default='data_id'/]
	[aw2.get module.current_field.ref_id set=template.ref_id default='data_id'/]
	[aw2.get module.current_field.meta_value_field set=template.meta_value_field default='name'/]
	[aw2.get module.current_field.field set=template.field default='{template.taxonomy}' /]
	[aw2.get module.current_field.table set=template.table default=all_terms /]
	[aw2.get module.current_field.ifnull set=template.ifnull/]
	[templates.set_query_no /]
			[module.set current_query_no={module.query_no} /]
			[module.set current_query_no={@add_field.item.query_no} not_empty='{@add_field.item.query_no}'/]

	[do.@junk set=module.dataset.field_query.new]
	  [module.current_query_no /] as 
	  (
	  select [module.previous_query_no /].*, 

      [if.not_empty template.ifnull]
      	ifnull([template.meta_value_field /],'[template.ifnull /]') as [template.field /]  
      [/if.not_empty]
      [if.else]
      	[template.meta_value_field /] as [template.field /]  
      [/if.else]
      
 from 
	  [module.previous_query_no /] left join [aw2.get template.table /]
	   on 
	  [module.previous_query_no /].[template.ref_id]=[template.table /].[template.id_field /] and taxonomy='[template.taxonomy/]' )
	[/do.@junk]
		[module.set current_field='' /]	        
[/templates.add]

[templates.add add_field_sql]

	[templates.set_query_no /]
			[module.set current_query_no={module.query_no} /]
			[module.set current_query_no={@add_field.item.query_no} not_empty='{@add_field.item.query_no}'/]

	[do.@junk set=module.dataset.field_query.new]
		[module.current_query_no /] as 
		(
		[code.run module.current_field.sql /]
		 )
	[/do.@junk]
		[module.set current_field='' /]			
[/templates.add]


//** templates to build q0 **//
[templates.add q0]

		[module.set current_query_no='q0' /]
		[module.set current_query_no={module.with.query_no} not_empty='{module.with.query_no}'/]

	with [module.current_query_no /] as (	
	  [templates.q0_sql not_empty='{module.with.sql}' /]	
	  [templates.q0_published_posts not_empty='{module.with.published_posts}' /]	
	  [templates.q0_aw2_filter_query not_empty='{module.with.aw2_filter_query}' /]	
	)
[/templates.add]

[templates.add q0_sql]
	[do.@i]
		[module.with.sql /]
	[/do.@i]
[/templates.add]

[templates.add q0_published_posts]
	[do.@i]
		Select ID as data_id from wp_posts where post_type='[module.with.published_posts.post_type /]' and post_status='publish'
	[/do.@i]
[/templates.add]

[templates.add q0_aw2_filter_query]
	[do.@i]
	  SELECT
	  object_id AS data_id
			[if.not_empty module.with.aw2_filter_query.select_fields]
			,[module.get with.aw2_filter_query.select_fields]
			[/if.not_empty]
	  FROM [module.get with.aw2_filter_query.table /] as d1
	  WHERE
	  1=1
	  [templates.aw2_where_clauses where='{module.with.aw2_filter_query.where}'/]
	[/do.@i]
[/templates.add]

[templates.add aw2_where_clauses]
  [loop.@i template.where]
	[template.set wheres.new]
	  [aw2.switch]
		[aw2.case cond="{@i.item.data_type}" equal="period"]
		  
          [date.aw2_period period="{@i.item.value}" set=template.select_period_arr/]

		  AND DATE([aw2.get @i.item.column /]) <= DATE([template.get select_period_arr.end_date /])
		  AND DATE([aw2.get @i.item.column /]) >= DATE([template.get select_period_arr.start_date /])
		[/aw2.case]

		[aw2.case not_empty="{@i.item.column}"]
		  AND [templates.apply_operator where={@i.item} /]
		[/aw2.case]

		[aw2.case not_empty="{@i.item.sql}"]
		  [aw2.get @i.item.sql /]
		[/aw2.case]

	  [/aw2.switch]
	[/template.set]
  [/loop.@i]

  [template.return template.wheres.space /]
[/templates.add]




//** templates for apply operators **//
[templates.add apply_operator]
		[template.set where.operator="{template.where.operator}" default='in' /]
		[template.set where.data_type="{template.where.data_type}" default='string' /]

		[templates.basic_operator list='lt,gt,lte,gte,eq,neq' contains='{template.where.operator}' where='{template.where}'/]

		[templates.whitespace_operator list='whitespace' contains='{template.where.operator}' where='{template.where}'/]	
		[templates.not_whitespace_operator list='not_whitespace' contains='{template.where.operator}' where='{template.where}'/]	
		[templates.null_operator list='null,not_null' contains='{template.where.operator}' where='{template.where}'/]	
		[templates.like_operator list='like,not_like' contains='{template.where.operator}' where='{template.where}'/]	
		[templates.in_operator list='in,not_in' contains='{template.where.operator}' where='{template.where}'/]	
		[templates.exists_operator list='exists' contains='{template.where.operator}' where='{template.where}'/]	
[/templates.add]

[templates.add basic_operator]

  [if.contains needle="{template.where.data_type}" haystack="string,number"]
	[template.where.column /]
  [/if.contains]
  [if.contains needle="{template.where.data_type}" haystack="date"]
	DATE([template.where.column /])
  [/if.contains]

  [if.equal lhs='{template.where.operator}' rhs='lt']<[/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='gt']>[/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='lte']<=[/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='gte']>=[/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='eq']=[/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='neq']<>[/if.equal]

	[if.contains needle="{template.where.data_type}" haystack="string"]
	'[template.where.value /]'
  [/if.contains]

	[if.contains needle="{template.where.data_type}" haystack="number"]
	[template.where.value /]
  [/if.contains]

  [if.contains needle="{template.where.data_type}" haystack="date"]
	DATE([template.where.value /])
  [/if.contains]

[/templates.add]

[templates.add like_operator]
  [template.where.column /]

  [if.equal lhs='{template.where.operator}' rhs='like'] LIKE [/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='not_like'] NOT LIKE [/if.equal]

	'%[template.where.value /]%'

[/templates.add]

[templates.add null_operator]
  [template.where.column /]

  [if.equal lhs='{template.where.operator}' rhs='null'] IS NULL [/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='not_null'] IS NOT NULL [/if.equal]
[/templates.add]


[templates.add whitespace_operator]
(
  [template.where.column /]
  [if.equal lhs='{template.where.operator}' rhs='whitespace'] IS NULL [/if.equal]
or
  TRIM([template.where.column /])
  [if.equal lhs='{template.where.operator}' rhs='whitespace'] = '' [/if.equal]
)
[/templates.add]

[templates.add not_whitespace_operator]
(
  [template.where.column /]
	[if.equal lhs='{template.where.operator}' rhs='not_whitespace'] IS NOT NULL [/if.equal]

and

  TRIM([template.where.column /])
	[if.equal lhs='{template.where.operator}' rhs='not_whitespace'] <> '' [/if.equal]
)

[/templates.add]

[templates.add in_operator]
  [template.where.column /]

  [if.equal lhs='{template.where.operator}' rhs='in'] IN [/if.equal]
	[if.equal lhs='{template.where.operator}' rhs='not_in'] NOT IN [/if.equal]

	[if.contains needle="{template.where.data_type}" haystack="string"]
		([template.where.value.comma.quote_comma /])
	[/if.contains]

	[if.contains needle="{template.where.data_type}" haystack="number"]
		([template.where.value/])
	[/if.contains]
[/templates.add]

[templates.add exists_operator]
	1=1
[/templates.add]


[templates.add filter_period_backup]
	[if.not_whitespace module.current_filter.period]
		[module.current_filter.field set=module.current_filter.field /]
		[module.current_filter.period set=module.current_filter.period default='day'/]
		[module.current_filter.which set=module.current_filter.which default=0 /]

		[do.@junk set='module.current_filter.sql_where']	
			[if.equal lhs='{module.current_filter.period}' rhs='day']
				[module.set current_filter.which=0 cond='{module.current_filter.which}' equal='today'/]
				[module.set current_filter.which=1 cond='{module.current_filter.which}' equal='yesterday'/]
					date([module.current_filter.field]) = CURDATE() - INTERVAL [module.current_filter.which/] DAY
			[/if.equal] 

			[if.equal lhs='{module.current_filter.period}' rhs='days']
					date([module.current_filter.field]) >= CURDATE() - INTERVAL [module.current_filter.which/] DAY
			[/if.equal] 

			[if.equal lhs='{module.current_filter.period}' rhs='month']
				[module.set current_filter.which=0 cond='{module.current_filter.which}' equal='this_month'/]
				[module.set current_filter.which=1 cond='{module.current_filter.which}' equal='last_month'/]
					month([module.current_filter.field])=month(DATE_FORMAT(CURDATE(), '%Y-%m-01')-interval [module.current_filter.which/] month) and
					year([module.current_filter.field])=year(DATE_FORMAT(CURDATE(), '%Y-%m-01')-interval [module.current_filter.which/] month)
			[/if.equal] 

			[if.equal lhs='{module.current_filter.period}' rhs='months']
					date([module.current_filter.field]) >= DATE_FORMAT(CURDATE(), '%Y-%m-01')-interval ([module.current_filter.which/] - 1) month
			[/if.equal] 

			[if.equal lhs='{module.current_filter.period}' rhs='year']
				[module.set current_filter.which=0 cond='{module.current_filter.which}' equal='this_year'/]
				[module.set current_filter.which=1 cond='{module.current_filter.which}' equal='this_year'/]
					YEAR([module.current_filter.field]) = YEAR(CURDATE()) - [module.current_filter.which/]
			[/if.equal] 
		[/do.@junk]

	[templates.set_query_no /]
		[do.@junk set=module.dataset.filter_query.new]
	[module.query_no /] as 
		(
		select [module.previous_query_no /].* from [module.previous_query_no /] 
					where 
			[module.current_filter.sql_where]
		)
  [/do.@junk]

	[/if.not_whitespace] 
	[module.set current_filter='' /]	
[/templates.add]				]]></content:encoded>
		<excerpt:encoded><![CDATA[
				
								]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date><![CDATA[2018-02-13 09:52:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-02-13 09:52:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[meta_query]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[db_service]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Post Builder</title>
		<link>https://wpoets.com/?post_type=db_service&#038;p=453552</link>
		<pubDate>Thu, 05 Jul 2018 04:19:09 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">http://mj.wordpoets.com/?post_type=db_service&#038;p=453552</guid>
		<description></description>
		<content:encoded><![CDATA[								[templates.add get_data]
  //***Posts Builder Part Start***//
  [query.posts_builder part=start]
    {
      [if.not_empty template.args.post_type]
      	"post_type": "[aw2.get template.args.post_type /]",
      [/if.not_empty]
      [if.else]
      	"post_type": [aw2.get template.args.post_arr /],
      [/if.else]
      "orderby": "[aw2.get template.args.orderby default="menu_order"/]",
      "order": "[aw2.get template.args.order default="ASC"/]",
      [if.not_equal lhs="{template.args.s}" rhs=""]
        "s": "[aw2.get template.args.s /]",
      [/if.not_equal]
      [if.not_empty template.args.tag__in]
        "tag__in": [ [aw2.get template.args.tag__in /] ],
      [/if.not_empty]
      [if.not_equal lhs="{template.args.post__in}" rhs=""]
        "post__in": [ [aw2.get template.args.post__in /] ],
      [/if.not_equal]
      [if.not_equal lhs="{template.args.post__not_in}" rhs=""]
        "post__not_in": [ [aw2.get template.args.post__not_in /] ],
      [/if.not_equal]
      [if.not_empty template.args.post_parent]
      	"post_parent": "[aw2.get template.args.post_parent /]",
      [/if.not_empty]
      "posts_per_page": [aw2.get template.args.posts_per_page default= -1 /],
      "paged": "[aw2.get template.args.paged default=1 /]"
    }
  [/query.posts_builder]  
  
  //***Posts Builder Part Meta Query***//
  [loop.@meta_val template.args.meta not_empty="{template.args.meta}"]
    [query.posts_builder part=meta_query]
      {
        "relation":"or",
        [loop.@meta_item @meta_val.item.comma not_empty="{@meta_val.item}"]
          "[aw2.get @meta_item.key /]":{
          "key": "[aw2.get @meta_val.key /]",
          "value": "\"[aw2.get @meta_item.item]\"",
          "compare": "LIKE"
          }
          [if.true @meta_item.between],[/if.true]
        [/loop.@meta_item]
      }
    [/query.posts_builder]
  [/loop.@meta_val]
  
  //***Posts Builder Part Meta Query for single meta***//
  [loop.@meta_val template.args.single_meta not_empty='{template.args.single_meta}']
    [query.posts_builder part=meta_query]
      {
          "key": "[aw2.get @meta_val.key /]",
          "value": "[aw2.get @meta_val.item.value /]",
          "compare": "[aw2.get @meta_val.item.compare default='=' /]",
          "type": "[aw2.get @meta_val.item.type default='CHAR' /]"
      }
    [/query.posts_builder]
  [/loop.@meta_val]
  
  //***Posts Builder Part Taxo Query***//
  [loop.@taxo_val template.args.taxo not_empty='{template.args.taxo}']
	[query.posts_builder part=tax_query not_empty="{@taxo_val.item.terms}"]
      {
        "taxonomy": "[aw2.get @taxo_val.key /]",
        "field": "[aw2.get @taxo_val.item.field default="ids" /]",
        "terms": [ [aw2.get @taxo_val.item.terms /] ],
        "include_children":	[aw2.get @taxo_val.item.include_children default=true /]
      }
	[/query.posts_builder]
  [/loop.@taxo_val]
  [query.posts_builder part=run set="template.result" /]
  [template.return template.result /]
[/templates.add]				]]></content:encoded>
		<excerpt:encoded><![CDATA[
				
								]]></excerpt:encoded>
		<wp:post_id>453552</wp:post_id>
		<wp:post_date><![CDATA[2018-07-05 04:19:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-05 04:19:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[post-builder]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[db_service]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[inline_featured_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[inline_featured_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[inline_featured_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[inline_featured_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[inline_featured_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[inline_featured_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/


Served from: wpoets.com @ 2019-12-15 14:09:10 by W3 Total Cache
-->