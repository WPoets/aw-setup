<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>WPoets</title>
	<link>https://wpoets.com</link>
	<description>Your Web Experts</description>
	<pubDate>Sun, 15 Dec 2019 13:58:41 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://wpoets.com</wp:base_site_url>
	<wp:base_blog_url>https://wpoets.com</wp:base_blog_url>
	
	<wp:author><wp:author_id>5</wp:author_id><wp:author_login><![CDATA[wpoid_web]]></wp:author_login><wp:author_email><![CDATA[amit@wpoets.com]]></wp:author_email><wp:author_display_name><![CDATA[Amit]]></wp:author_display_name><wp:author_first_name><![CDATA[Amit]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

				
	

		<item>
		<title>Send</title>
		<link>https://wpoets.com/?post_type=notification_service&#038;p=558662</link>
		<pubDate>Wed, 10 Apr 2019 09:16:19 +0000</pubDate>
		<dc:creator><![CDATA[bhagyashree]]></dc:creator>
		<guid isPermaLink="false">http://dc.wordpoets.com/?post_type=notification_service&#038;p=558662</guid>
		<description></description>
		<content:encoded><![CDATA[//**Main template definition**//
[templates.add main]  
 	//**Set log, as we will use it in all the templates, default: yes**//
  	[module.set log = "yes" empty={module.log}/]
  	
  	//****When template_slug is available****//
  	[if.not_empty module.template_slug]
  		//**Set post_type, as we will use it in all the templates, default: mail_templates**//
  		[module.set template_post_type= {module.template_post_type} default = {env.settings.default_mail_templates_post_type} empty={module.template_post_type}/]
        
       	//****Get the field values from mail template post****//
    	[query.get_post post_slug='{module.template_slug}' post_type='{module.template_post_type}' set=module.fields/]
    [/if.not_empty]
    
  	//***Execute when email array is present***//
	  [templates.email not_empty={module.email} set=template.returnval/]  
    //**Execute when sms array is present**//
    [templates.sms not_empty={module.sms} set=template.returnval/]  
  	[template.return template.returnval/]
[/templates.add]


//**Template to send emails**//
[templates.add email]
    
    //**Setting up subject and message fields in email array**//
  	[module.set_array email subject = {module.fields.meta.subject.run} empty = {module.email.subject}/]
  	[module.set_array email message = {module.fields.parse_content.run} empty = {module.email.message} /]
    
    //****Default mail provider****//
  	[module.set_array email.provider id = "wpmail" empty = {module.email.provider.id} /]
    
    //**Setting provider api key from the settings when the api key is not passed in array**//
    [module.set_array email.provider key = {env.settings.send_grid_key} empty = {module.email.provider.key} /]
    
  	//**Setting up from email value if from email is not present in array**//
  	[module.set_array email.from email_id = {env.settings.from_email} empty={module.email.from.email_id} /]
  	[module.set_array email.reply_to email_id = {env.settings.from_email} empty={module.email.reply_to.email_id}/]
    [module.set_array email headers.new="Content-Type: text/html; charset=UTF-8" /]
   	[module.set_array email headers.new="Reply-To: {module.email.reply_to.name} <{module.email.reply_to.email_id}>" not_empty='{module.email.reply_to}' /]
    [module.set_array email headers.new="From: {module.email.from.name} <{module.email.from.email_id}>" not_empty='{module.email.from}' /]
    [module.set_array email headers.new="Cc: {module.email.cc.email_id}" not_empty='{module.email.cc.email_id}' /]
    [module.set_array email headers.new="Bcc: {module.email.bcc.email_id}" not_empty='{module.email.bcc.email_id}' /]
    
    //******temporary set for testing****//
    
    //**Validation of the data***//
    [templates.validation data={module.email} set=template.returnval/]
    
    //***Return when validation failed***//
    [template.return template.returnval not_empty={template.returnval}/]
    
    [this_collection.attachments.attach_file_path_wpmail 
    	email={module.email}
        object_id={module.notification_object_id}
        object_type={module.notification_object_type}
        cond={module.email.provider.id} 
        equal="wpmail"
        set=module.email /]
        
    [this_collection.attachments.add_attachment 
    	email={module.email}
        object_id={module.notification_object_id}
        object_type={module.notification_object_type}
        cond={module.email.provider.id} 
        equal="sendgrid"
        set=module.email /]   
    
    
    //**When provider is Wpmail**//
    [notify.wpmail email={module.email} 
    	log={module.log} 
        notification_object_type={module.notification_object_type}
        notification_object_id={module.notification_object_id} 
        cond={module.email.provider.id} 
        equal="wpmail" 
        set=template.returnval/]
        
    
  	//**When provider is Sendgrid**//
    [notify.sendgrid email={module.email} 
    	log={module.log} 
        notification_object_type={module.notification_object_type}
        notification_object_id={module.notification_object_id} 
        cond={module.email.provider.id} 
        equal="sendgrid" 
        set=template.returnval/]
        
 	[if.equal lhs={template.returnval} rhs="success"]
    	[template.set ack.status="success"/]
      	[template.set ack.int_reason="mail sent" /]
      	[template.set ack.reason="Mail Sent!"/]	
      	[template.return template.ack /]
    [/if.equal]
    
    [template.set ack.status="error"/]
    [template.set ack.int_reason="mail not sent" /]
    [template.set ack.reason="Mail not Sent!"/]	
    [template.return template.ack /]
 
[/templates.add]


//**Template to send sms**//
[templates.add sms]

    //****Setting up message field in sms array****//
    [module.set_array sms message = {module.fields.meta.sms.run} empty = {module.sms.message}  /]
    [module.set_array sms.provider id= {env.settings.sms-service-provider}  empty = {module.sms.provider.id} /]
    [module.set_array sms.provider key = {env.settings.sms-api-key}  empty = {module.sms.provider.key} /]
    
    //**Validation of the data***//
    [templates.validation data={module.sms} set=template.returnval/]
    
    //***Return when validation failed***//
    [template.return template.returnval not_empty={template.returnval}/]
    
    //****temp for testing****//
    [module.set_array sms.to mobile_number = ''/]

    //**When provider is kookoo**//
    [notify.kookoo sms="{module.sms}" 
    	log="{module.log}" 
        notification_object_type={module.notification_object_type}
        notification_object_id={module.notification_object_id} 
        cond={module.sms.provider.id} 
        equal="kookoo" 
        set=template.returnval/]
      
  	[if.equal lhs={template.returnval} rhs="success"]
    	[template.set ack.status="success"/]
      	[template.set ack.int_reason="sms sent" /]
      	[template.set ack.reason="SMS Sent!"/]	
    	[template.return template.ack /]
    [/if.equal]
    
    [template.set ack.status="error"/]
    [template.set ack.int_reason="sms not sent" /]
    [template.set ack.reason="SMS not Sent!"/]	
    [template.return template.ack /]
    
[/templates.add]

//***Validation***//
[templates.add validation]

	[if.not_empty module.email]
      //***When subject is empty***//
      [if.empty template.data.to.email_id]
          [template.set ack.status="error"/]
          [template.set ack.int_reason="to email_id is empty" /]
          [template.set ack.reason="To Email Id is required!"/]	
          [template.return template.ack /]
      [/if.empty]

      //***When subject is empty***//
      [if.empty template.data.subject]
          [template.set ack.status="error"/]
          [template.set ack.int_reason="subject is empty" /]
          [template.set ack.reason="Subject is required!"/]	
          [template.return template.ack /]
      [/if.empty]
    [/if.not_empty]

    //***When message is empty***//
    [if.empty template.data.message]
    	[template.set ack.status="error"/]
      	[template.set ack.int_reason="message is empty" /]
      	[template.set ack.reason="Message is required!"/]	
    	[template.return template.ack /]
    [/if.empty]
	
    //***When provider is empty***//
    [if.empty template.data.provider.id]
    	[template.set ack.status="error"/]
      	[template.set ack.int_reason="provider is empty" /]
      	[template.set ack.reason="Provider is required!"/]	
    	[template.return template.ack /]
    [/if.empty]
    
    //***When provider is not wpmail and provider key is empty***//
    [if.not_contains needle={template.data.provider.id} haystack="wpmail"]
    	[if.empty template.data.provider.key]
        	[template.set ack.status="error"/]
            [template.set ack.int_reason="apikey is empty" /]
            [template.set ack.reason="Provider key is required!"/]	
            [template.return template.ack /]
        [/if.empty]
    [/if.not_contains]
    
[/templates.add]]]></content:encoded>
		<excerpt:encoded><![CDATA[
				
								]]></excerpt:encoded>
		<wp:post_id>558662</wp:post_id>
		<wp:post_date><![CDATA[2019-04-10 09:16:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-10 09:16:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[send]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[notification_service]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Attachments</title>
		<link>https://wpoets.com/?post_type=notification_service&#038;p=558664</link>
		<pubDate>Wed, 10 Apr 2019 09:16:49 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">http://dc.wordpoets.com/?post_type=notification_service&#038;p=558664</guid>
		<description></description>
		<content:encoded><![CDATA[
				//****Adds attachment for the application****//
[templates.add add_attachment]
    //*****Check if object_id is present or not and object type is lapp or not*****//
    [if.empty template.object_id][/if.empty]
    [if.or cond={template.object_type} not_equal="lead"]
    	[template.return template.email/]
    [/if.or]
    //***define lapp id on modular level****//
    [module.set lead_id={template.object_id}/]
    //****Check if any attachment is present or not, if present than attach file path to array****//
    [templates.attach_file_path email={template.email} set=template.email/]
    //*****Return email array****//
    [template.return template.email/]
[/templates.add]

//****Finds attachment****//
[templates.add attach_file_path]
    //*****if attachment count is zero, then return****//
    [if.equal lhs={template.email.attachments.file.count} rhs="0"]
    	[template.return template.email/]
    [/if.equal]
    //*****loop through all the attachments****//
    [loop.@file template.email.attachments.file]
      [templates.fetch_path file_name={@file.item} set=template.file_path/]
      [php.wp_get_attachment_caption p1="{@file.item}" set="template.filename" /]
      [template.set_array email.attachments.file.{@file.counter} name="{template.filename}" path={template.file_path}/]
    [/loop.@file]
    //*****Return new array formed with file path******//
    [template.return template.email/]
[/templates.add]


[templates.add attach_file_path_wpmail]
    //*****if attachment count is zero, then return****//
    [if.equal lhs={template.email.attachments.file.count} rhs="0"]
    	[template.return template.email/]
    [/if.equal]
    //*****loop through all the attachments****//
    [loop.@file template.email.attachments.file]
        [php.get_attached_file p1="{@file.item}" set=template.file_path /]
        [template.set email.attachments.file.new={template.file_path}/]
    [/loop.@file]
    
  	//*****loop through all the attachments paths****//
    [loop.@file template.email.attachments.file_path]
      [aw2.get @file.item set=template.file_path /]
      [template.set email.attachments.file.new={template.file_path} /]
    [/loop.@file]
    [template.set email.attachments="{template.email.attachments.file}"/]
    //*****Return new array formed with file path******//
    [template.return template.email/]
[/templates.add]


//****fetch file path stored against the lapp_id****//
[templates.add fetch_path]
	[ignore.debug]
      //***root directory**//
      [php.dirname p1="{server_variables.DOCUMENT_ROOT}" p2="1" set=template.temp_path/] 
      //***setting up the file upload path***//
      [template.set uploadpath="{template.temp_path}/uploads/{module.lead_id}" /]
      //****get the file path***//
      [php.glob p1="{template.uploadpath}/{template.file_name}" set=template.file_path /]
      //***updating file path***//
      [template.file_path.0 set=template.file_path/]
    [/ignore.debug]
    
    [php.get_attached_file p1="{template.file_name}" set=template.file_path /]
    //***return the file path***//
    [template.return template.file_path/]
[/templates.add]			]]></content:encoded>
		<excerpt:encoded><![CDATA[
				
								]]></excerpt:encoded>
		<wp:post_id>558664</wp:post_id>
		<wp:post_date><![CDATA[2019-04-10 09:16:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-10 09:16:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[attachments]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[notification_service]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>sendmail</title>
		<link>https://wpoets.com/?post_type=notification_service&#038;p=860481</link>
		<pubDate>Fri, 15 Nov 2019 17:20:39 +0000</pubDate>
		<dc:creator><![CDATA[wpoid_web]]></dc:creator>
		<guid isPermaLink="false">http://nxt.wpoets.com/?post_type=notification_service&#038;p=859073</guid>
		<description></description>
		<content:encoded><![CDATA[//**Main template definition**//
[templates.add main]  
 	//**Set log, as we will use it in all the templates, default: yes**//
  	[module.set log = "yes" empty={module.log}/]
  	

       	//****Get the field values from mail template post****//
    	[query.get_post post_slug='{module.template_slug}' post_type='{module.template_post_type}' set=module.fields/]
 
    
  	//***Execute when email array is present***//
	  [templates.email not_empty={module.email} set=template.returnval/]  
    //**Execute when sms array is present**//
    [templates.sms not_empty={module.sms} set=template.returnval/]  
  	[template.return template.returnval/]
[/templates.add]


//**Template to send emails**//
[templates.add email]
    
    //**Setting up subject and message fields in email array**//
  	[module.set_array email subject = {module.fields.meta.subject.run} empty = {module.email.subject}/]
  	[module.set_array email message = {module.fields.parse_content.run} empty = {module.email.message} /]
    
    //****Default mail provider****//
  	[module.set_array email.provider id = "wpmail" empty = {module.email.provider.id} /]
    
    //**Setting provider api key from the settings when the api key is not passed in array**//
    [module.set_array email.provider key = {env.settings.send_grid_key} empty = {module.email.provider.key} /]
    
  	//**Setting up from email value if from email is not present in array**//
  	[module.set_array email.from email_id = {env.settings.from_email} empty={module.email.from.email_id} /]
  	[module.set_array email.reply_to email_id = {env.settings.from_email} empty={module.email.reply_to.email_id}/]
    [module.set_array email headers.new="Content-Type: text/html; charset=UTF-8" /]
   	[module.set_array email headers.new="Reply-To: {module.email.reply_to.name} <{module.email.reply_to.email_id}>" not_empty='{module.email.reply_to}' /]
    [module.set_array email headers.new="From: {module.email.from.name} <{module.email.from.email_id}>" not_empty='{module.email.from}' /]
    [module.set_array email headers.new="Cc: {module.email.cc.email_id}" not_empty='{module.email.cc.email_id}' /]
    [module.set_array email headers.new="Bcc: {module.email.bcc.email_id}" not_empty='{module.email.bcc.email_id}' /]
    
    //******temporary set for testing****//
    
    //**Validation of the data***//
    [templates.validation data={module.email} set=template.returnval/]
    
    //***Return when validation failed***//
    [template.return template.returnval not_empty={template.returnval}/]
    
    [this_collection.attachments.attach_file_path_wpmail 
    	email={module.email}
        object_id={module.notification_object_id}
        object_type={module.notification_object_type}
        cond={module.email.provider.id} 
        equal="wpmail"
        set=module.email /]
        
    [this_collection.attachments.add_attachment 
    	email={module.email}
        object_id={module.notification_object_id}
        object_type={module.notification_object_type}
        cond={module.email.provider.id} 
        equal="sendgrid"
        set=module.email /]   
    
    
    //**When provider is Wpmail**//
    [notify.wpmail email={module.email} 
    	log={module.log} 
        notification_object_type={module.notification_object_type}
        notification_object_id={module.notification_object_id} 
        cond={module.email.provider.id} 
        equal="wpmail" 
        set=template.returnval/]
        
    
  	//**When provider is Sendgrid**//
    [notify.sendgrid email={module.email} 
    	log={module.log} 
        notification_object_type={module.notification_object_type}
        notification_object_id={module.notification_object_id} 
        cond={module.email.provider.id} 
        equal="sendgrid" 
        set=template.returnval/]
        
 	[if.equal lhs={template.returnval} rhs="success"]
    	[template.set ack.status="success"/]
      	[template.set ack.int_reason="mail sent" /]
      	[template.set ack.reason="Mail Sent!"/]	
      	[template.return template.ack /]
    [/if.equal]
    
    [template.set ack.status="error"/]
    [template.set ack.int_reason="mail not sent" /]
    [template.set ack.reason="Mail not Sent!"/]	
    [template.return template.ack /]
 
[/templates.add]

//***Validation***//
[templates.add validation]

	[if.not_empty module.email]
      //***When subject is empty***//
      [if.empty template.data.to.email_id]
          [template.set ack.status="error"/]
          [template.set ack.int_reason="to email_id is empty" /]
          [template.set ack.reason="To Email Id is required!"/]	
          [template.return template.ack /]
      [/if.empty]

      //***When subject is empty***//
      [if.empty template.data.subject]
          [template.set ack.status="error"/]
          [template.set ack.int_reason="subject is empty" /]
          [template.set ack.reason="Subject is required!"/]	
          [template.return template.ack /]
      [/if.empty]
    [/if.not_empty]

    //***When message is empty***//
    [if.empty template.data.message]
    	[template.set ack.status="error"/]
      	[template.set ack.int_reason="message is empty" /]
      	[template.set ack.reason="Message is required!"/]	
    	[template.return template.ack /]
    [/if.empty]
	
    //***When provider is empty***//
    [if.empty template.data.provider.id]
    	[template.set ack.status="error"/]
      	[template.set ack.int_reason="provider is empty" /]
      	[template.set ack.reason="Provider is required!"/]	
    	[template.return template.ack /]
    [/if.empty]
    
    //***When provider is not wpmail and provider key is empty***//
    [if.not_contains needle={template.data.provider.id} haystack="wpmail"]
    	[if.empty template.data.provider.key]
        	[template.set ack.status="error"/]
            [template.set ack.int_reason="apikey is empty" /]
            [template.set ack.reason="Provider key is required!"/]	
            [template.return template.ack /]
        [/if.empty]
    [/if.not_contains]
    
[/templates.add]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860481</wp:post_id>
		<wp:post_date><![CDATA[2019-11-15 17:20:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-11-15 17:20:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sendmail]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[notification_service]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/


Served from: wpoets.com @ 2019-12-15 13:58:41 by W3 Total Cache
-->