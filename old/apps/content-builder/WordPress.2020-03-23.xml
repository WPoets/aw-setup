<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Jobs in Company Secretary, Legal, Finance &#38; HR Advisory</title>
	<link>http://mj.wordpoets.com</link>
	<description>Right candidates for the right jobs</description>
	<pubDate>Mon, 23 Mar 2020 10:06:52 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://mj.wordpoets.com</wp:base_site_url>
	<wp:base_blog_url>http://mj.wordpoets.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[Amit]]></wp:author_login><wp:author_email><![CDATA[amit+mangalam@wpoets.com]]></wp:author_email><wp:author_display_name><![CDATA[Amit]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

				
	

		<item>
		<title>metaboxes</title>
		<link>http://mj.wordpoets.com/?post_type=content_builder&#038;p=594005</link>
		<pubDate>Mon, 02 Mar 2020 05:27:20 +0000</pubDate>
		<dc:creator><![CDATA[Amit]]></dc:creator>
		<guid isPermaLink="false">http://mj.wordpoets.com/?post_type=content_builder&#038;p=594005</guid>
		<description></description>
		<content:encoded><![CDATA[[templates.add layout]

[this_collection.content-editor-js /]
<link rel="stylesheet" href="[aw2.get url.site /]/site-skin/css/awesome-css/1">
<template get='[aw2.get url.site /]/content-editor/' axn=core.set set='settings.path'></template>

<div class="container-fluid no-padding custom-metabox">
  <div class="row">
    <div class="col-sm-9 activity-box">
      <div class="row">

        <div class="col-sm-12 text-left">
          <label class="control-label text-capitalize"> 
            Content Activity Type <span class="brand-danger"> *</span>
          </label>
            [if.equal lhs="{request.action}" rhs="edit"]
              [query.get_post post_id="{request.post}" set='module.post' /]
              
                <label class="control-label text-capitalize"> 
                  [query.get_post post_id="{{aw2.get module.post.meta.activity_type}}"  set='module.activity_type' not_empty='{module.post.meta.activity_type}'/]
                  [module.get activity_type.post_title /]
                  
                </label>
					    [module.set reviewed_by="{module.post.meta.reviewed_by}" /]
              [do.@X not_empty="{module.reviewed_by}"]
                <div>
                  <label class="control-label text-capitalize"> 
                    Reviewed By : [aw2.get module.reviewed_by /]
                  </label>
                </div>
              [/do.@X]  
         
                <div class="preview-template">
                  <a href="[aw2.get function.site_url /]/content-approval/questions-list?questions=[aw2.get request.post /]" class="btn big-btn btn-third" target="_blank" rel="noopener noreferrer">Preview template</a>
                </div>
                  
                  
              <template axn='route.run' route_ajax="get-course-activity-type-fields" activity_id="[aw2.get module.post.ID /]" course-activity-type="[aw2.get module.post.meta.activity_type /]"></template>
              
            [/if.equal]
            [if.else]
              <select class="js-content-template form-control" style="width:100%" tabindex="-1" aria-hidden="true" id="content-template" name="content-template">
               [query.posts_builder part=start]
                  {
                    "posts_per_page": -1,
                    "post_type": "content_template",
                    "post_status": "publish",
                    "order": "ASC",
                    "orderby": "title"
                  }
                [/query.posts_builder]
                          
              [query.posts_builder  part=run set="module.content_activity_type_results" /]
              <option></option>
              [loop.@activity module.content_activity_type_results.posts]
                <option value="[aw2.get @activity.item.ID /]">[aw2.get @activity.item.post_title /]</option>
              [/loop.@activity]
              </select>
              <span class="help-block">To add data, please select an Activity Type</span>
              
              <script type="spa/axn" axn='route.run' bind="change" bind_selector=".js-content-template" route_ajax="get-course-activity-type-fields"></script>
            [/if.else]
        </div>
        <div class="gap-7"></div>
      </div>
      <section role="form-elements" class="row no-margin form-elements"></section>
      <section role="tab-elements" class="row no-margin tab-elements"></section>
    </div>
   
    <div class="col-sm-3 activity-img">
      <div class="text-center"><label>Sample Preview</label></div>
      <section role="screen" class="screen">
        <div class="mute text-center pad-5 gray-lighter-bg" style="padding:20px;">Sample preview in not available. Select an Activity Type to see preview.</div>
      </section>
    </div>
   
  </div>
  <textarea name="content_elements" id="content_elements" class="hide metadata" style="display:none;">[aw2.get module.post.meta.content_elements /]</textarea>
</div>


<script type="spa/axn" axn="course_editor.initialize_select2" post_type="course_activity_type"></script>

<script type="spa/axn" axn="course_editor.init"></script>
<script type="spa/axn" axn="core.run_script">

  // Listen for the "heartbeat-tick" and fire autosave.
  $(document).on( 'heartbeat-tick.autosave', function(e, data) {
    if($( "#title" ).val() != ""){
		  spa.course_editor.auto_save('course-editor','autosave-activity-post', 'content_elements');
		}
  });

</script>

<script type="text/javascript">
  jQuery( document ).ready(function($) {
    $( "#publish" ).click(function(e) {
      if(
        typeof  $('#set.1.mark').val() ===  "undefined" && 
        typeof  $('#set.2.mark').val() ===  "undefined" && 
        typeof  $('#set.3.mark').val() ===  "undefined" && 
        typeof  $('#set.4.mark').val() ===  "undefined" && 
        typeof  $('#set.5.mark').val() ===  "undefined" && 
        typeof  $('#set.6.mark').val() ===  "undefined" && 
        typeof  $('#set.7.mark').val() ===  "undefined" && 
        typeof  $('#set.8.mark').val() ===  "undefined" 
      ){  
        if($('#total_marks').val() ==  ""){
          $('#total_marks').val('1');
        }
      }
    })
    
    
    var ajax_url = "[aw2.get url.site /]/root/modules/add-publish-post-user-meta";
    var post_ID = $('#post_ID').val();
    if(post_ID !== '' && $('#publish').val() == 'Publish'){
      $.ajax({
        url: ajax_url,
        type: "post",
        data: {post_ID: post_ID},
        cache: false,
        async:false,
        success: function (result) {
        },
        error:function(){ console.log("some error occurred in update meta  function ") },
      });
    }
  })
</script>
  
  This is Layout BOX : [aw2.get template.post.ID /] 
  
[/templates.add]

[templates.add save]
  [php.update_post_meta p1='{template.post.ID}' p2='simple_test' p3='saved hua 2.0?' /]
[/templates.add]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>594005</wp:post_id>
		<wp:post_date><![CDATA[2020-03-02 10:57:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-02 05:27:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[metaboxes]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[content_builder]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>content-editor-js</title>
		<link>http://mj.wordpoets.com/?post_type=content_builder&#038;p=595741</link>
		<pubDate>Thu, 05 Mar 2020 16:34:53 +0000</pubDate>
		<dc:creator><![CDATA[Amit]]></dc:creator>
		<guid isPermaLink="false">http://mj.wordpoets.com/?post_type=content_builder&#038;p=595741</guid>
		<description></description>
		<content:encoded><![CDATA[<script type="spa/axn" axn=core.run_script>
  spa.content_editor={};
  spa.content_editor.prerequisites={};                                 
  
  spa.content_editor.prerequisites.cdn_js_files='select2/4.0.3/js/select2.full.js,Sortable/js/Sortable.js,jquery.imgareaselect/0.9.10/js/jquery.imgareaselect.min.js,jquery-form-element-repeater/0.1.0/js/jquery.form-repeater.js,bootstrap/3.3.6/js/bootstrap.min.js';
  
  spa.content_editor.init=function(){
    
    if($( '#title' ).val() == ""){
      $("#go").prop("disabled", true);
      $(".js-course-activity-types").prop("disabled", true);
    }
    
    //enable Activity Type selection
    $( "body" ).on( "keyup", "#title", function() {
      if($( this ).val() != ""){
        $("#go").prop("disabled", false);
        $(".js-course-activity-types").prop("disabled", false);
      }else{
        $("#go").prop("disabled", true);
        $(".js-course-activity-types").prop("disabled", true);
      }
    });
  }
  
  spa.content_editor.main=function(){
  
    //setup  tabs
    spa.content_editor.generate_tabs();
    
    console.log(tinymce);
    //setup tiny mce
    tinymce.init({
      selector: '.tinymce',
      relative_urls : false,
      remove_script_host : false,
      plugins: [
      'charmap colorpicker compat3x directionality hr image lists media paste tabfocus textcolor fullscreen wordpress wpautoresize wpeditimage wpgallery wplink wpdialogs wptextpattern wpview wpemoji eqnequation'
      ],
      toolbar: 'undo redo | styleselect | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link unlink image media eqn_button_key | forecolor backcolor emoticons fontselect',
      font_formats: "Aksharyogini=aksharyogini;Arial=arial,helvetica,sans-serif;Bedizen=bedizen;Braveheart DNA=braveheart dna;Calibri=calibri;Cardo=cardo;Chelsea Market=chelsea market;Comic Sans MS=comic sans ms,cursive;Corporate Rounded=corporate rounded;Courier New=courier new,courier,monospace;days ago=days ago;Days Later=days later;Garamond=garamond;Georgia=georgia,serif;Indie=indie flower;Just Another Hand=just another hand;KG Corner of the Sky=kg corner of the sky;Lane Humouresque=lane humouresque;Lucida Sans Unicode=lucida sans unicode,lucida grande,sans-serif;Qarmic Sans Free=qarmic sans free;Sacramento=sacramento;Tahoma=tahoma,geneva,sans-serif;Times new roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,helvetica,sans-serif;Verdana=verdana,geneva,sans-seri;"
    });
      
    //setup char count
    $( "body" ).on( "keyup", "[maxlength]", function() {
      var lg_desc_maxLength = $( this ).attr('maxlength');
      var length = $(this).val().length;
      var length = lg_desc_maxLength-length;
      $( this ).parent().find('.help-block').text(length + ' characters remaining');
    });
      
    //capture Publish, Update & Save Draft buttons
    $('#save-post, #publish').on('click', function(){
      spa.content_editor.save();
      spa.content_editor.save_li();
    });

    //capture image update event
    var _URL = window.URL || window.webkitURL;
    
    $( "body" ).on( "change", "[data-imgtype]", function(e) {
      var image,
        file,
        ele_id = $( this ).attr( "id" ),
        imgType = $( this ).data( "imgtype" ),
        ele_name = $( this ).data( "name" ),
        error_flag = "on";
      if ((file = this.files[0])) {
      
        image = new Image();
        image.onload = function() {
      
        
          switch (imgType) {
          
            case 'icon':                
              if((this.width >= 32 && this.height >= 32) && this.width/this.height == 1){
                error_flag = "off";
              }
            break;
              
            case 'sq-img':                
              if((this.width >= 320 && this.height >= 320) && this.width/this.height == 1){
                error_flag = "off";
              }
            break;
              
            case 'v-img':                 
              if((this.width >= 480 && this.height >= 640) && this.width/this.height == 0.75){
                error_flag = "off";
              }
            break;    
              
            case 'h-img':               
              if((this.width >= 640 && this.height >= 480) && ((this.width/this.height).toFixed(2) == 1.33)){
                error_flag = "off";
              }
            break;
              
            default:                
              if(this.width >= 640){
                error_flag = "off";
              }
            break;
          }
          
          if(error_flag == "off"){
            spa.content_editor.hide_img_error(ele_id);
            spa.content_editor.upload_img(ele_id, ele_name);
          }else{
            spa.content_editor.show_img_error(ele_id);
          }
        };
        
        //image.src = _URL.createObjectURL(file);
      }
    });
    
    //Delete attached image
    $('body').on('click','span.delete-img',function () {
      $(this).parent().prev().find('.img-preview').empty();
      $(this).parent().empty();
      $('[data-ele_id='+$(this).data('field_id')+']').val('');
      $('#'+$(this).data('field_id')).val('').prop('required', true);
      $('#'+$(this).data('field_id')).prev().find('.mute-text').remove();
    });
  }
  
  var img_hotspot = {};
  
  //initialize the HotSpot Upload File type
  spa.content_editor.initialize_hotspot_upload=function(){
    $('input[type="file"]').addClass('hotspot');
  }
  
  //initialize the HotSpot Creator
  spa.content_editor.initialize_hotspot=function(){
    img_hotspot = $('.init-hotspot').imgAreaSelect({ 
      maxWidth: 45,
      maxHeight: 45,
      handles: true,
      aspectRatio: '1:1',
      instance: true
    });

    //capture the Image Hotspot selection & Confirm
    $('#confirm-img-hotspot').on('click', function(){
      
      var selection = img_hotspot.getSelection();
      var img_pos = $('.init-hotspot').position();
      
      var hotspot = [];
      
      hotspot.push(((selection.x1 - img_pos.left) / $('.init-hotspot').outerWidth() * 100).toFixed(2));
      hotspot.push(((selection.y1 - img_pos.top) / $('.init-hotspot').outerHeight() * 100).toFixed(2));
      
      $('div.tab-pane.active').find('input[disabled]').val(hotspot.join());
      
      img_hotspot.cancelSelection();
    });
  }
  
  //initialize sortable list
  spa.content_editor.initialize_sortable=function(){
    var editable = document.getElementById("editable");

    editableList = Sortable.create(editable, {
      filter: '.js-remove',
      onUpdate: function (evt){
        spa.content_editor.save_li()
      },
      onSort: function (evt){
        spa.content_editor.save_li()
      },
      onFilter: function (evt) {
        var el = editableList.closest(evt.item); // get dragged item
        el && el.parentNode.removeChild(el);
      }
    });
  }
  
  
  spa.content_editor.show_img_error=function(ele_id){

    $("#"+ele_id).parent().addClass('has-error');
    $("#"+ele_id).parent().find($('span.help-block span.show')).removeClass('show').addClass('hide');
    
    //create a error msg span
    $('<span/>', {
      class: 'error',
      html: 'Incorrect Image selected.'
    }).appendTo($("#"+ele_id).parent().find($('span.help-block')));

  }
  
  spa.content_editor.hide_img_error=function(ele_id){

    $("#"+ele_id).parent().removeClass('has-error');
    $("#"+ele_id).parent().find($('span.help-block span.error')).remove();
    $("#"+ele_id).parent().find($('span.help-block span.hide')).removeClass('hide').addClass('show');

  }
  
  spa.content_editor.upload_img=function(ele_id, ele_name){
  
    var post_id = $('#post_ID').val();
    //var url = ajaxurl+ "?action=app_ajax&ajax=true&app=content-editor&slug=upload-image&ele_id="+ele_id+"&post_id="+post_id+"&name="+ele_name;
    var url = "[aw2.get url.site /]/content-editor/ajax/upload-image?ele_id="+ele_id+"&post_id="+post_id+"&name="+ele_name;
    var file = document.querySelector("#"+ele_id);
    var fd = new FormData();
      
    fd.append(ele_id, file.files[0]);
    
    $.ajax({
      url: url,
      type: "POST",
      data: fd,
      processData: false,  // tell jQuery not to process the data
      contentType: false,   // tell jQuery not to set contentType
      success: function (res) {
      
        res = $.parseJSON(res.trim());
        $('input[name="'+ele_name+'"]').val(res.url);
        $('#attachment_id').val(res.attachment_id);
        
        $('<img/>', {
            src: res.url
          }).appendTo($("#"+ele_id).parent().find($('div.img-preview')));
          
          $('<span/>', {
          class:"btn btn-sm btn-danger delete-img",
            html: 'Delete Image',
            'data-field_id': ele_id
          }).appendTo($("#"+ele_id).parent().find($('div.img-actions')));
        
        if($('#'+ele_id).hasClass('hotspot')){
          $('div.img-preview').find('img').addClass('init-hotspot');
          $('<button/>', {
            id: 'confirm-img-hotspot',
            class: 'btn btn-secondary btn-sm',
            type: 'button',
            html: 'Confirm Selection'
          }).appendTo($("#"+ele_id).parent().find($('div.img-actions')));
          
          spa.content_editor.initialize_hotspot();
          
        }
      }
    });   
  }
  
  //save function loops through form elements.
  spa.content_editor.save=function(){
    
    // Collection data for tinymce
    $('form#post').find('.tinymce').each(function(){
      tinyMCE.get($(this).attr('id')).save();
    })
    var elements = [];
    $('form#post').find('[data-activity="yes"]').each(function( index ) {

      var obj = {};
      
      if(($( this ).val() != "") && ($( this ).val() != null)){
        obj.name = $( this ).attr('name');
        obj.value = $( this ).val();

        elements.push(obj);
      }
    });
    
    var metadata = JSON.stringify(elements);
    $("textarea.metadata").val(metadata);
    
  }
  
  //save function loops through sortable LI elements.
  spa.content_editor.save_li=function(){
    // Collection data for tinymce
    $('form#post').find('.tinymce').each(function(){
      tinyMCE.get($(this).attr('id')).save();
    })
    var elements = [];
    $('form#post').find('#editable li').each(function( index ) {
      var obj = {};
      obj.id = $( this ).data('id');
      obj.title = $( this ).data('title');
      elements.push(obj);
    });
    if (elements.length > 0) {
      var metadata = JSON.stringify(elements);
      $("textarea.metadata").val(metadata);
    }
        
  }
  
  spa.content_editor.auto_save=function(app,slug,meta_key){    
    post_id = $('#post_ID').val();
    if(post_id != ''){
      if(slug == "autosave-activity-post")
        spa.content_editor.save();
      else
        spa.content_editor.save_li();
      
      //send the ajax reqest to save the data.
      var activity_data = $("textarea.metadata").val();
      var activity_type = $(".select2").val();

      var url = "[aw2.get url.site /]/"+app+"/ajax/"+slug+"?post_id="+post_id;

      fd = new FormData();
      fd.append(meta_key, activity_data);
      
      if(typeof activity_type != 'undefined' && activity_type != '' )
        fd.append('activity_type', activity_type);
      $.ajax({
        url: url,
        type: "POST",
        data: fd,
        processData: false,  // tell jQuery not to process the data
        contentType: false   // tell jQuery not to set contentType
      });
    }
  }
  
  spa.content_editor.generate_tabs=function(){
  
    //create a tab navigation ul
    $('<ul/>', {
      class:"nav nav-tabs",
      role:"tablist"
    }).appendTo('.tab-elements');

    //create a tab-content div
    $('<div/>', {
      class: 'tab-content'
    }).appendTo('.tab-elements');

    $("li[role='presentation']").each(function(){

      $rnd = spa.content_editor.randomString(5);
      var dummy = $(this).clone();
      dummy.find('a[role="tab"]').remove();
      $x=$(this).nextUntil('li');

      //$(this).contents(':not("a")').remove();
      $(this).find('a').attr("href", '#'+$rnd);

      $(this).appendTo("ul.nav-tabs");

      //create a tab-pane div
      $('<div/>', {
        id: $rnd,
        class: 'tab-pane'
      }).append($x).appendTo('.tab-content');
    });
    
    $('.nav-tabs a:first').tab('show');
    
  }
  
  
   spa.content_editor.filter_table=function(O){
   $("#questions-list-loader").addClass("is-active");
   
    var ajax_url = "[aw2.get url.site /]/"+O.block.app_name+"/ajax/get-typeahead-html/course_activity";
    jQuery.ajax({
        url: ajax_url,
        delay: 250,
        data:{
            post_id:$("#post_ID").val(),
            board:$("#board").val(),
            textbook_class:$("#textbook_class").val(),
            textbook:$("#textbook").val(),
            chapter:$("#chapter").val(),
            sections:$("#sections").val(),
            subsections:$("#subsections").val(),
            surprise_question:$("#surprise_question_filter").val()
          },
        success: function (result) {
        
          // data = $.parseJSON(result.trim());
          $(".filter-result").html(result);
          jQuery('#example').DataTable({
            "columnDefs": [
            { "orderable": false, "targets": 0 }
            ]
          });
         $("#questions-list-loader").removeClass("is-active");
        },
        error:function(){ console.log("some error occurred in get_textbooks function ") },
        cache: false
    });
  }
  
  spa.content_editor.randomString=function(len, charSet) {
    charSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
    var randomString = '';
    for (var i = 0; i < len; i++) {
      var randomPoz = Math.floor(Math.random() * charSet.length);
      randomString += charSet.substring(randomPoz,randomPoz+1);
    }
    return randomString;
  }

  //not use this script now
  
  //initialize the Select2 box  
  spa.content_editor.initialize_select2=function(o){

    var el = o.el;
    post_type = el.attr("post_type");
    var typeahead_url = "[aw2.get url.site /]/content-editor/ajax/get-typeahead-data/"+post_type;
    $(".select2").select2({
      ajax: {
        url: typeahead_url,
        delay: 250,
        data: function (params) {
          return {
            q: params.term,
            board:$("#board").val(),
            textbook_class:$("#textbook_class").val(),
            textbook_subject:$("#textbook_subject").val(),
            textbook:$("#textbook").val(),
            chapter:$("#chapter").val(),
            sections:$("#sections").val(),
            subsections:$("#subsections").val()
            
          };
        },
        processResults: function (data, params) {
          // parse the results into the format expected by Select2
          // since we are using custom formatting functions we do not need to
          // alter the remote JSON data, except to indicate that infinite
          // scrolling can be used
          params.page = params.page || 1;
          data = $.parseJSON(data.trim());
          return {
          results: data.items
          };
        },
        cache: false
      },
      escapeMarkup: function (markup) { return markup; },
      minimumInputLength: 1,
      templateResult: spa.content_editor.formatTypes,
      templateSelection: spa.content_editor.formatTypesSelection
    });
    
    if($( '#title' ).val() == ""){
      $(".select2").prop("disabled", true);
    }
    
    //enable Activity Type selection
    $( "body" ).on( "keyup", "#title", function() {
      if($( this ).val() != ""){
        $(".select2").prop("disabled", false);
      }else{
        $(".select2").prop("disabled", true);
      }
    });
  }

  spa.content_editor.formatTypes=function(types){
    
    if (types.loading) return types.text;

    var markup = "<div class='select2-result-type clearfix'>" +
      "<div class='select2-result-type__meta'>" +
      "<div class='select2-result-type__title'>" + types.post_title + "</div>";

    if (types.post_content) {
      markup += "<div class='select2-result-type__description'>" + types.post_content + "</div>";
    }

    markup += "</div></div>";

    return markup;
  }
  
  spa.content_editor.formatTypesSelection=function(types){
    return types.post_title || types.post_name;
  }
    
  spa.content_editor.show_img_error=function(ele_id){

    $("#"+ele_id).parent().addClass('has-error');
    $("#"+ele_id).parent().find($('span.help-block span.show')).removeClass('show').addClass('hide');
    
    //create a error msg span
    $('<span/>', {
      class: 'error',
      html: 'Incorrect Image selected.'
    }).appendTo($("#"+ele_id).parent().find($('span.help-block')));

  }

  spa.content_editor.generate_sortable_li=function(o){
  
    var el=o.el;
    res = $.parseJSON(el.text());
    
    //create li
    $('<li/>', {
      class:"",
      'data-id': res.id, 
      'data-title': res.title,
      html: res.title+'<a class="js-edit" href="[php.admin_url p1=post.php?action=edit&post= /]'+res.id+'" target="_blank"><i class="material-icons">Edit</i></a><i class="js-remove material-icons">clear</i>',
    }).appendTo('#editable');
  }
  
  
  spa.content_editor.set_custom_media_image=function(e){
  //https://wordpress.stackexchange.com/questions/112592/add-media-button-in-custom-plugin
    var attachment_url = "#"+e.attachment_id;
    var attachment_id = "#attachment_id";
    if ( typeof wp !== 'undefined' && wp.media && wp.media.editor) {
      var button = $(this);
      var id = button.prev();
      wp.media.editor.send.attachment = function(props, attachment) {
        $(attachment_url).val(attachment.url);
        $(attachment_id).val(attachment.id);
      };
      wp.media.editor.open(button);
      return false;
    }
  }
  
  spa.content_editor.remove_media_image=function(e){
    var attachment_url = "#"+e.attachment_id;
    var attachment_id = "#attachment_id";
    $(attachment_url).val('');
    $(attachment_id).val('');
  }
</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>595741</wp:post_id>
		<wp:post_date><![CDATA[2020-03-05 22:04:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-05 16:34:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[content-editor-js]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[content_builder]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>content</title>
		<link>http://mj.wordpoets.com/?post_type=content_builder&#038;p=598330</link>
		<pubDate>Fri, 20 Mar 2020 12:38:23 +0000</pubDate>
		<dc:creator><![CDATA[Amit]]></dc:creator>
		<guid isPermaLink="false">http://mj.wordpoets.com/?post_type=content_builder&#038;p=598330</guid>
		<description></description>
		<content:encoded><![CDATA[[templates.add single_view]
 [if.empty template.content_id]
  [template.set msg='content id is missing' /]
  [template.return template.msg /]
 [/if.empty]
 
 		[module.set_array query]
        [query_count]no[/query_count]
        [pagesize]-1[/pagesize]
        [with]
           [sql]
           	select post_id, meta_value as template_slug from [aw2.get wpdb.postmeta /] where meta_key='content_template' and post_id ='[env.get template.content_id /]'
           [/sql]
					
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, meta_value as content_elements from [aw2.get wpdb.postmeta /] join [module.previous_query_no /] on wp_postmeta.post_id=[module.previous_query_no /].post_id and meta_key='content_elements'
              [/sql]
          [/add_field]	
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, ID, post_content from [aw2.get wpdb.posts /] join [module.previous_query_no /] on post_name=[module.previous_query_no /].template_slug
              [/sql]
          [/add_field]	
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, meta_value as form_fields from [aw2.get wpdb.postmeta /] join [module.previous_query_no /] on wp_postmeta.post_id=[module.previous_query_no /].ID and meta_key='form_fields'
              [/sql]
          [/add_field]        

        [/with]
    [/module.set_array]
    [db.meta_query query="{module.query}" set="template.rs"/]

    [if.empty template.rs.rows]
       [template.set msg='data not found' /]
       [template.return template.msg /]
    [/if.empty]
    [template.set content_data={template.rs.rows.0} /]
    [template.set rs='' /]

		[aw2.get template.content_data.content_elements.json_decode o.set='template.content_elements' /]
  
    [loop.@cte template.content_elements]
        [aw2.get @cte.item.value o.set='template.activity.{@cte.item.name}' /]
    [/loop.@cte]  

    [aw2.get template.content_data.post_content.run o.set='template.content_data.content'/]
    [template.set content_data.activity='{template.activity}' /]
   
   [template.return template.content_data /]
[/templates.add]

[templates.add list_view]
  [if.empty template.content_ids]
    [template.set msg='content ids are missing' /]
    [template.return template.msg /]
  [/if.empty]
  
   [template.get content_ids m.implode_on='  quote_comma' o.set='template.content_id' /]
   
   [env.dump template.content_id /]
 
 		[module.set_array query]
        [query_count]no[/query_count]
        [pagesize]-1[/pagesize]
        [with]
           [sql]
           	select post_id, meta_value as template_slug from [aw2.get wpdb.postmeta /] where meta_key='content_template' and post_id IN ([env.get template.content_id /])
           [/sql]
					
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, meta_value as content_elements from [aw2.get wpdb.postmeta /] join [module.previous_query_no /] on wp_postmeta.post_id=[module.previous_query_no /].post_id and meta_key='content_elements'
              [/sql]
          [/add_field]	
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, ID, post_content from [aw2.get wpdb.posts /] join [module.previous_query_no /] on post_name=[module.previous_query_no /].template_slug
              [/sql]
          [/add_field]	
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, meta_value as form_fields from [aw2.get wpdb.postmeta /] join [module.previous_query_no /] on wp_postmeta.post_id=[module.previous_query_no /].ID and meta_key='form_fields'
              [/sql]
          [/add_field]        

        [/with]
    [/module.set_array]
    [db.meta_query query="{module.query}" set="template.rs"/]
    
    [env.dump template.rs /]
    
     [if.empty template.rs.rows]
       [template.set msg='data not found' /]
       [template.return template.msg /]
    [/if.empty]
    
    [template.set_array all_content='' /]
    [loop.@content_data template.rs.rows]
      [template.set content_data={@content_data.item} /]

      [aw2.get template.content_data.content_elements.json_decode o.set='template.content_elements' /]

      [loop.@cte template.content_elements]
          [aw2.get @cte.item.value o.set='template.activity.{@cte.item.name}' /]
      [/loop.@cte]  

      [aw2.get template.content_data.post_content.run o.set='template.content_data.content'/]
      [template.set_array all_content.new activity='{template.activity}' content='{template.content_data.content}' post_id='{template.content_data.post_id}' /]

   [/loop.@content_data]
   
   [template.return template.all_content /]
   
[/templates.add]

[templates.add single_form]
 [if.empty template.content_id]
  [template.set msg='content id is missing' /]
  [template.return template.msg /]
 [/if.empty]
  
 		[module.set_array query]
        [query_count]no[/query_count]
        [pagesize]-1[/pagesize]
        [with]
           [sql]
           	select post_id, meta_value as template_slug from [aw2.get wpdb.postmeta /] where meta_key='content_template' and post_id ='[env.get template.content_id /]'
           [/sql]
					
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, meta_value as content_elements from [aw2.get wpdb.postmeta /] join [module.previous_query_no /] on wp_postmeta.post_id=[module.previous_query_no /].post_id and meta_key='content_elements'
              [/sql]
          [/add_field]	
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, ID, post_content from [aw2.get wpdb.posts /] join [module.previous_query_no /] on post_name=[module.previous_query_no /].template_slug
              [/sql]
          [/add_field]	
          	[add_field new]
             [sql raw]          
                select [module.previous_query_no /].*, meta_value as form_fields from [aw2.get wpdb.postmeta /] join [module.previous_query_no /] on wp_postmeta.post_id=[module.previous_query_no /].ID and meta_key='form_fields'
              [/sql]
          [/add_field]        

        [/with]
    [/module.set_array]
    [db.meta_query query="{module.query}" set="template.rs"/]
    
     [if.empty template.rs.rows]
       [template.set msg='data not found' /]
       [template.return template.msg /]
    [/if.empty]
    [template.set content_data={template.rs.rows.0} /]
    [template.set rs='' /]

		[aw2.get template.content_data.content_elements.json_decode o.set='template.content_elements' /]
  
    [loop.@cte template.content_elements]
        [aw2.get @cte.item.value o.set='template.activity.{@cte.item.name}' /]
    [/loop.@cte]  

    [aw2.get template.content_data.form_fields.run o.set='template.content_data.form'/]
    [template.set content_data.activity='{template.activity}' /]
[/templates.add]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>598330</wp:post_id>
		<wp:post_date><![CDATA[2020-03-20 18:08:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-20 12:38:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[content]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[content_builder]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/


Served from: mj.wordpoets.com @ 2020-03-23 15:36:52 by W3 Total Cache
-->